# general settings
name: Restormer_baseline_option.yml
model_type: DeflareModel
scale: 1
num_gpu: 1  # set num_gpu: 0 for cpu mode
# manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: FlareX
    type: FlareX_Pair_Loader
    image_path: dataset/Flickr24K
    scattering_dict:
      Flare7k_scattering: dataset/Flare7Kpp/Flare7K/Scattering_Flare/Compound_Flare
      Real_scattering1: dataset/Flare7Kpp/Flare-R/Compound_Flare
    reflective_dict: 
      Flare7k_reflective: ~
      Real_reflective1: ~
    light_dict:
      Flare7k_light: dataset/Flare7Kpp/Flare7K/Scattering_Flare/Light_Source
      Real_light1: dataset/Flare7Kpp/Flare-R/Light_Source
    data_ratio: [0.5,0.5] # change the [1,0] to [0.5,0.5] to use the Flare7K++
    transform_base:
      img_size: 512
    transform_flare:
      scale_min: 0.8
      scale_max: 1.5
      # translate: 100
      translate: 300
      shear: 20
    mask_type: ~

    
    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: flare_test
    type: Image_Pair_Loader
    dataroot_gt: dataset/Flare7Kpp/test_data/real/gt/
    dataroot_lq: dataset/Flare7Kpp/test_data/real/input/
    gt_size: 512

# network structures
network_g:
  type: Restormer
  img_ch: 3
  output_ch: 6
  dim: 16
  num_blocks: [4,6,6,8]
  num_refinement_blocks: 1
  heads: [1,2,4,8]
  ffn_expansion_factor: 2.66
  bias: False
  LayerNorm_type: WithBias
  dual_pixel_task: False

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  scheduler:
    type: MultiStepLR
    milestones: [200000]
    gamma: 0.5 

  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]
  
  # losses
  l1_opt:
    type: L_Abs_pure
    loss_weight: 0.5
  perceptual:
    type: L_percepture
    loss_weight: 0.5

  out_deflare: True
  ema_decay: 0.9
  total_iter: 3000000
  warmup_iter: -1  # no warm up


# validation settings
val:
  val_freq: !!float 5e3
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false
    ssim: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 4
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
